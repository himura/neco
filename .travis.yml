# This file has been generated -- see https://github.com/hvr/multi-ghc-travis
language: c
sudo: false

cache:
  directories:
    - $HOME/.cabsnap
    - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

matrix:
  include:
    - env: CABALVER=1.18 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3
      compiler: ": #GHC 7.10.3"
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.2
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2], sources: [hvr-ghc]}}

before_install:
 - unset CC
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
     zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
          $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v > installplan.txt
 - sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt

# check whether current requested install-plan matches cached package-db snapshot
 - if diff -u $HOME/.cabsnap/installplan.txt installplan.txt;
   then
     echo "cabal build-cache HIT";
     rm -rfv .ghc;
     cp -a $HOME/.cabsnap/ghc $HOME/.ghc;
     cp -a $HOME/.cabsnap/lib $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/;
   else
     echo "cabal build-cache MISS";
     rm -rf $HOME/.cabsnap;
     mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
     cabal install --only-dependencies --enable-tests --enable-benchmarks;
   fi

# snapshot package-db on cache miss
 - if [ ! -d $HOME/.cabsnap ];
   then
      echo "snapshotting package-db to build-cache";
      mkdir $HOME/.cabsnap;
      cp -a $HOME/.ghc $HOME/.cabsnap/ghc;
      cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/;
   fi

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal haddock # tests that documentation can be generated
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

notifications:
  slack:
    secure: K8IE4yP4+Y148O80+FzqvRM7nJ8uSv9up33RWxKOrPvIpWYBNu1di2S4ZYF+/tCm+MnW2BGjZNC+DGT4qM5d1JPXYSfjb1uqzsQfn13L2rllRSOZKC/YET8z2O8XF/WTt03JBFaI+g3Co25e22f7NXB15/aU0wVF/TQgBFofribhPqBF/83JvxUe0pJUdzY2SZjDjMjBbFsX0giCtjcX6dLyvLF9hp8XdZS9DoHFSEe8BC1Y8wmKimmmidMHUEgCS42+uzZUM61dRB0x8ON7Id7C3DXBD/VUMsQyjSuc/UsZOvJVFlNkIs1OMRpS+EUmiW4yLvgg8QH2FIrefLSM14gJQxSbUP9yqp3jwS9D7Vwd1+XBg5E+T87IjTeHGX7+BoXD1ATOgQQ6UKhJYz7swFRXVqbOcIIGBebwXFlWNKGHnsaW801J6ibFDwGJeCfbryAMbz+434qPqlbZFdc5ah3Pe0Q4yytV5YRrb1zWCkv7Hx4/hoHgDEMxs0ddyKWbETYrDgJqdGfBuwkKiVrHzWPyFYioJDCLlHejb/5Gf28YrTtVDXd8PMQSKyoJumcWHZrOPvYSB5H6k5dduIDjF2DN/F6gQg16g5DS1pOHy7/oyZJA2nKZrtYOjBf/a/vbc1Odb2zRG9HPuUI5wis62gikzE/gje0xQZjdOd8/2uE=

# EOF
